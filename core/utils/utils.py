def load_file(file_path):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞."""
    try:
        with open(file_path, 'r', encoding='utf-8') as file:
            content = file.read()
            return content
    except FileNotFoundError:
        error_msg = f"–§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω."
        return error_msg
    except Exception as e:
        error_msg = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}"
        return error_msg


async def formatting_items(item: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ."""
    name = item.get('name', '–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ')
    brand = item.get('oem_brand', '–ù–µ —É–∫–∞–∑–∞–Ω')
    oem_num = item.get('oem_num', '–ù–µ —É–∫–∞–∑–∞–Ω')
    price = item.get('price', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')
    count = item.get('count', 0)
    unit = item.get('unit', '—à—Ç')
    chel = item.get('count_chel', 0)
    ekb = item.get('count_ekb', 0)
    message = (
            f"üì¶ <b>{name}</b>\n"
            f"üè¢ <b>–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å:</b> {brand}\n"
            f"üî¢ <b>–ê—Ä—Ç–∏–∫—É–ª:</b> {oem_num}\n"
            f"üè∑Ô∏è <b>–¶–µ–Ω–∞:</b> {price} —Ä—É–±.\n"
            f"üìä <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ —Å–∫–ª–∞–¥–∞—Ö:</b> {count} "
            f"{unit} (–ß–µ–ª—è–±–∏–Ω—Å–∫: "
            f"{chel} {unit}, "
            f"–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥: {ekb} "
            f"{unit})\n\n"
    )
    return message
